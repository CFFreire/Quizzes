{"count":53,"next":null,"previous":null,"results":[{"_class":"assessment","id":40806216,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>What does IOPS stand for in database terminology?</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p><strong>I</strong>nput/<strong>O</strong>utput per<strong> S</strong>econd</p>","<p><strong>I</strong>nternet <strong>O</strong>fficial <strong>P</strong>rotocol<strong> S</strong>tandards</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806218,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>MongoDB can benefit from adding more RAM to your servers.</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>Yes</p>","<p>No</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806220,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements regarding to indexes.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>Indexes are used to increase the speed of our queries.</p>","<p>The <code>_id</code> field is not automatically indexed in collection.</p>","<p>Indexes reduce the number of documents that MongoDB must parse to satisfy a query.</p>","<p>Indexes can improve write, update, and delete performance.</p>"]},"correct_response":["a","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806222,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>What do you mean by collection scan during query execution?</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>It scans every document in a collection, to select those documents that match the query.</p>","<p>It can use the index to limit the number of documents it must check.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806224,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Which of the following queries can use an index on the <em>title </em>field?</p>","relatedLectureIds":"","feedbacks":["","","","",""],"answers":["<pre class=\"prettyprint linenums\">db.movies.find({ title: \"Death Note\" })</pre>","<pre class=\"prettyprint linenums\">db.movies.find({ genres: \"Drama\", type: \"series\" })</pre>","<pre class=\"prettyprint linenums\">db.movies.find()</pre>","<pre class=\"prettyprint linenums\">db.movies.find()</pre>","<pre class=\"prettyprint linenums\">db.movies.find({ _id:&nbsp;245 })</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806226,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>What can you deduce from the <code>explain()</code> method?</p><p><br></p><p>For example: </p><p><br></p><pre class=\"prettyprint linenums\">db.collection.find().explain()</pre>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>The index used by the chosen plan.</p>","<p>Whether the sort stage was performed by index or performed in memory.</p>","<p>All stages that the query must go through with details about the time it takes, number of documents processed and returned to the next stage in the pipeline.</p>","<p>All available indexes for this collection.</p>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806228,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following schema for a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{\n    _id: ObjectId,\n    title: String,\n    genres: Array,\n    languages: Array,\n    year: 32-bit integer\n}</pre><p><br></p><p>And the following index on the <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;title:&nbsp;1&nbsp;}</pre><p><br></p><p>Which of the following queries will use the given index to perform the sorting stage?</p>","relatedLectureIds":"","feedbacks":["","","",""],"explanation":"<pre class=\"prettyprint linenums\">db.movies.find( {genres:&nbsp;\"Drama\"} ).sort( {title:&nbsp;1} )</pre><p>Yes, in this case the index will be used to retrieve the sorted documents and then it will filter the movies matching the genre.</p>","answers":["<pre class=\"prettyprint linenums\">db.movies.find( {} ).sort( {title:&nbsp;1} )</pre>","<pre class=\"prettyprint linenums\">db.movies.find( {} ).sort( {title:&nbsp;-1} )</pre>","<pre class=\"prettyprint linenums\">db.movies.find( {genres:&nbsp;\"Drama\"} ).sort( {title:&nbsp;1} )</pre>","<pre class=\"prettyprint linenums\">db.movies.find( {genres:&nbsp;\"Drama\"} ).sort( {year:&nbsp;1} )</pre>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806230,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{ title: 1, genres: 1 }</pre><p><br></p><p>We want to insert the following document:</p><p><br></p><pre class=\"prettyprint linenums\">{\n  \"title\": \"The Immigrant\",\n  \"year\": 1917,\n  \"genres\": [\n      \"Short\",\n      \"Comedy\",\n      \"Drama\"\n  ]\n}</pre><p><br></p><p>How many index entries will be created?</p>","relatedLectureIds":"","feedbacks":["","","","",""],"answers":["<p>0</p>","<p>1</p>","<p>2</p>","<p>3</p>","<p>4</p>"]},"correct_response":["d"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806232,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{ title: 1, genres: 1 }</pre><p><br></p><p>We want to insert the following document:</p><p><br></p><pre class=\"prettyprint linenums\">{\n  \"title\": \"The Immigrant\",\n  \"year\": 1917,\n  \"genres\": [\n      \"Short\",\n      \"Comedy\",\n      \"Drama\"\n  ]\n}</pre><p><br></p><p>Select proper index entries.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<pre class=\"prettyprint linenums\">\"The&nbsp;Immigrant\",&nbsp;\"Short\"\n\"The&nbsp;Immigrant\",&nbsp;\"Comedy\"\n\"The&nbsp;Immigrant\",&nbsp;\"Drama\"</pre>","<pre class=\"prettyprint linenums\">\"Short\", \"The&nbsp;Immigrant\"\n\"Comedy\", \"The&nbsp;Immigrant\"\n\"Drama\", \"The&nbsp;Immigrant\"</pre>","<pre class=\"prettyprint linenums\">\"The&nbsp;Immigrant\",&nbsp;\"Short\", \"Comedy\", \"Drama\"</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806234,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;\"title\":&nbsp;1,&nbsp;\"imdb.rating\":&nbsp;-1,&nbsp;\"imdb.votes\":&nbsp;-1,&nbsp;\"type\":&nbsp;1&nbsp;}</pre><p><br></p><p>Can the following query use the given index for both filtering and sorting?</p><p><br></p><pre class=\"prettyprint linenums\">db.movies.find( {&nbsp;\"title\":&nbsp;{&nbsp;$lt:&nbsp;\"M\"&nbsp;}&nbsp;} ).sort( {&nbsp;\"imdb.votes\":&nbsp;-1&nbsp;} )</pre>","relatedLectureIds":"","feedbacks":["",""],"explanation":"<p>No, this query does not use equality in the index prefix. When you use an index to filter and sort, the query must contain equality conditions on all prefix keys that precede the sort keys. Also, it skipped the next key in the \"imdb.rating\" prefix in the sort predicate.</p>","answers":["<p>No</p>","<p>Yes</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806236,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;\"title\":&nbsp;1,&nbsp;\"imdb.rating\":&nbsp;-1,&nbsp;\"imdb.votes\":&nbsp;-1,&nbsp;\"type\":&nbsp;1&nbsp;}</pre><p><br></p><p>Can the following query use the given index for both filtering and sorting?</p><p><br></p><pre class=\"prettyprint linenums\">db.movies.find( { \"title\": \"James Bond\" } ).sort( { \"imdb.rating\": 1, \"imdb.votes\": 1 } )</pre>","relatedLectureIds":"","feedbacks":["",""],"explanation":"<p>Yes, this query matches the equality in the query predicate with the index prefix and continues the prefix in the sort predicate moving the index backwards.</p>","answers":["<p>Yes</p>","<p>No</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806238,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;\"title\":&nbsp;1,&nbsp;\"imdb.rating\":&nbsp;-1,&nbsp;\"imdb.votes\":&nbsp;-1,&nbsp;\"type\":&nbsp;1&nbsp;}</pre><p><br></p><p>Can the following query use the given index for both filtering and sorting?</p><p><br></p><pre class=\"prettyprint linenums\">db.movies.find( { \"title\": \"James Bond\", \"imdb.rating\": { $gt: 8} } ).sort( { \"imdb.rating\": 1 } )</pre>","relatedLectureIds":"","feedbacks":["",""],"explanation":"<p>Yes, although this query does not use equality in the \"imdb.rating\" field of the index prefix, it does use the same field for sorting.</p>","answers":["<p>Yes</p>","<p>No</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806240,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following index in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;\"title\":&nbsp;1,&nbsp;\"imdb.rating\":&nbsp;-1,&nbsp;\"imdb.votes\":&nbsp;-1,&nbsp;\"type\":&nbsp;1&nbsp;}</pre><p><br></p><p>Can the following query use the given index for both filtering and sorting?</p><p><br></p><pre class=\"prettyprint linenums\">db.movies.find( { \"imdb.rating\": 8, \"title\": \"James Bond\" } ).sort( { \"imdb.votes\": -1 } )</pre>","relatedLectureIds":"","feedbacks":["",""],"explanation":"<p>Yes, this query can use the index prefix. The order of the fields in the query predicate does not matter. Since both \"imdb.rating\" and \"title\" are part of an index prefix, this query can use the index for an equality condition.</p>","answers":["<p>Yes</p>","<p>No</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806242,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select true statements about query plans in MongoDB.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>Query plans are cached so that plans don't have to be generated and compared with each other each time a query is executed.</p>","<p>For a given query, each index in the collection generates at least one query plan.</p>","<p>If there are no indexes for the query, the main stage in the query plan will be the COLLSCAN stage.</p>"]},"correct_response":["a","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806244,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select the method that forces MongoDB to use a specific index.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">hint()</pre>","<pre class=\"prettyprint linenums\">index()</pre>","<pre class=\"prettyprint linenums\">explain()</pre>","<pre class=\"prettyprint linenums\">force()</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806246,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Which of the following rules (when ordering) should be followed when building query indexes?</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>equality, sort, range</p>","<p>equality, range, sort</p>","<p>range, sort, equality</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806248,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following indexes in a <em>movies </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;_id:&nbsp;1&nbsp;}\n{&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1&nbsp;}</pre><p><br></p><p>Which of the following queries can be covered by one of the given indexes?</p>","relatedLectureIds":"","feedbacks":["","",""],"explanation":"<pre class=\"prettyprint linenums\">db.movies.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;title:&nbsp;{&nbsp;$in:&nbsp;[&nbsp;\"Death&nbsp;Note\",&nbsp;\"The&nbsp;Immigrant\"&nbsp;]&nbsp;}&nbsp;},&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;_id:&nbsp;0,&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1, genres: 1&nbsp;}\n)</pre><p><br></p><p>No, this query would use the <code>{&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1&nbsp;}</code> index, but it is projecting the <code>genres</code> field.</p>","answers":["<pre class=\"prettyprint linenums\">db.movies.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;title:&nbsp;{&nbsp;$in:&nbsp;[&nbsp;\"Death&nbsp;Note\",&nbsp;\"The&nbsp;Immigrant\"&nbsp;]&nbsp;}&nbsp;},&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;_id:&nbsp;0,&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1&nbsp;}\n)</pre>","<pre class=\"prettyprint linenums\">db.movies.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;title:&nbsp;{&nbsp;$in:&nbsp;[&nbsp;\"Death&nbsp;Note\",&nbsp;\"The&nbsp;Immigrant\"&nbsp;]&nbsp;}&nbsp;},&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;_id:&nbsp;0,&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1, genres: 1&nbsp;}\n)</pre>","<pre class=\"prettyprint linenums\">db.movies.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{ genres:&nbsp;\"Crime\" },&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;_id:&nbsp;0,&nbsp;title:&nbsp;1,&nbsp;year:&nbsp;1, genres: 1&nbsp;}\n)</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806250,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following query:</p><p><br></p><pre class=\"prettyprint linenums\">db.gamers.find(\n    { level:&nbsp;{&nbsp;$gte&nbsp;:&nbsp;70&nbsp;},&nbsp;map:&nbsp;\"Inferno\"&nbsp;}&nbsp;\n).sort( {&nbsp;points:&nbsp;1,&nbsp;group:&nbsp;1&nbsp;} )</pre><p><br></p><p>Which of the following indexes best supports this query? Keep in mind the equality, sort, range rule.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">{map: 1, points: 1, group: 1, level: 1}</pre>","<pre class=\"prettyprint linenums\">{level: 1, map: 1, points: 1, group: 1}</pre>","<pre class=\"prettyprint linenums\">{points: 1, group: 1, level: 1, map: 1}</pre>","<pre class=\"prettyprint linenums\">{points: 1, group: 1, map: 1, level: 1}</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806252,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You want to execute the following query quite often in your application:</p><p><br></p><pre class=\"prettyprint linenums\">db.hotels.aggregate([\n&nbsp;&nbsp;{&nbsp;$match:&nbsp;{&nbsp;stars:&nbsp;{&nbsp;$gt:&nbsp;4.5&nbsp;}&nbsp;}&nbsp;},\n&nbsp;&nbsp;{&nbsp;$sort:&nbsp;{&nbsp;stars:&nbsp;1&nbsp;}&nbsp;}\n])</pre><p><br></p><p>Your collection doesn't have any additional indexes. Which index should you create to support this query?</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<pre class=\"prettyprint linenums\">db.hotels.createIndex( {&nbsp;stars:&nbsp;1&nbsp;} )</pre>","<pre class=\"prettyprint linenums\">db.hotels.createIndex( {&nbsp;match:&nbsp;1&nbsp;} )</pre>","<p>In this case, the index could not be created.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806254,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements regarding to scaling.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>Scaling horizontally is generally cheaper than scaling vertically.</p>","<p>When scaling horizontally our scaling cost increases linearly.</p>","<p>When scaling vertically our scaling cost increases linearly.</p>"]},"correct_response":["a","b"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806256,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements regarding to multikey indexes.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>Multikey indexes allow us to index on array fields.</p>","<p>Multikey indexes don't support indexes on multiple array fields on single documents.</p>","<p>An index doesn't become multikey until a document that has an array value is inserted.</p>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806258,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following indexes:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;name:&nbsp;1,&nbsp;founded_year:&nbsp;1&nbsp;}\n{&nbsp;tag_list:&nbsp;1,&nbsp;is_active:&nbsp;1&nbsp;}</pre><p><br></p><p>And the following documents:</p><p><br></p><pre class=\"prettyprint linenums\">{\n    _id: ObjectId(\"52cdef7c4bab8bd675297daa\"),\n    name: \"Sparter\",\n    founded_year: 2007,\n    tag_list: [\"gaming\", \"game\", \"wow\"],\n    is_active: true\n},\n{\n&nbsp;&nbsp;&nbsp;&nbsp;_id:&nbsp;ObjectId(\"52cdef7c4bab8bd675297da3\"),\n&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;\"Yahoo!\",\n&nbsp;&nbsp;&nbsp;&nbsp;founded_year:&nbsp;1994,\n&nbsp;&nbsp;&nbsp;&nbsp;tag_list:&nbsp;[\"search\",&nbsp;\"webmail\"],\n    is_active: true\n}</pre><p><br></p><p>Select true statement.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>There would be a total of 7 index keys created across all of these documents and indexes.</p>","<p>There would be a total of 2 index keys created across all of these documents and indexes.</p>","<p>There would be a total of 4 index keys created across all of these documents and indexes.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806260,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>We have the following indexes:</p><p><br></p><pre class=\"prettyprint linenums\">{&nbsp;name:&nbsp;1,&nbsp;founded_year:&nbsp;1&nbsp;}\n{&nbsp;tag_list:&nbsp;1,&nbsp;is_active:&nbsp;1&nbsp;}</pre><p><br></p><p>And the following documents:</p><p><br></p><pre class=\"prettyprint linenums\">{\n    _id: ObjectId(\"52cdef7c4bab8bd675297daa\"),\n    name: \"Sparter\",\n    founded_year: 2007,\n    tag_list: [\"gaming\", \"game\", \"wow\"],\n    is_active: true\n},\n{\n&nbsp;&nbsp;&nbsp;&nbsp;_id:&nbsp;ObjectId(\"52cdef7c4bab8bd675297da3\"),\n&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;\"Yahoo!\",\n&nbsp;&nbsp;&nbsp;&nbsp;founded_year:&nbsp;1994,\n&nbsp;&nbsp;&nbsp;&nbsp;tag_list:&nbsp;[\"search\",&nbsp;\"webmail\"],\n    is_active: true\n}</pre><p><br></p><p>Select all index keys created across all of these documents and indexes.</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<pre class=\"prettyprint linenums\">{&nbsp;name:&nbsp;\"Sparter\",&nbsp;founded_year:&nbsp;2007}\n{&nbsp;name:&nbsp;\"Yahoo!\",&nbsp;founded_year:&nbsp;1994}\n{&nbsp;tag_list:&nbsp;\"gaming\",&nbsp;is_active:&nbsp;true&nbsp;}\n{&nbsp;tag_list:&nbsp;\"game\",&nbsp;is_active:&nbsp;true&nbsp;}\n{&nbsp;tag_list:&nbsp;\"wow\",&nbsp;is_active:&nbsp;true&nbsp;}\n{&nbsp;tag_list:&nbsp;\"search\",&nbsp;is_active:&nbsp;true&nbsp;}\n{&nbsp;tag_list:&nbsp;\"webmail\",&nbsp;is_active:&nbsp;true&nbsp;}</pre>","<pre class=\"prettyprint linenums\">{&nbsp;name:&nbsp;\"Sparter\",&nbsp;founded_year:&nbsp;2007}\n{&nbsp;name:&nbsp;\"Yahoo!\",&nbsp;founded_year:&nbsp;1994}\n{&nbsp;tag_list:&nbsp;[\"gaming\", \"game\", \"wow\"],&nbsp;is_active:&nbsp;true&nbsp;}\n{&nbsp;tag_list:&nbsp;[\"search\",&nbsp;\"webmail\"],&nbsp;is_active:&nbsp;true&nbsp;}</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806262,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You are working in a team on a certain application in the gaming sector. Queries similar to the following are quite often executed by your application.</p><p><br></p><pre class=\"prettyprint linenums\">db.gamers.find( { level: 10, is_active: true } )</pre><p><br></p><p>How can you speed up the execution of similar queries? Choose the best option.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>Create the given index:</p><p><br></p><pre class=\"prettyprint linenums\">db.gamers.createIndex({ level: 1, is_active: 1 })</pre>","<p>Create the given index:</p><p><br></p><pre class=\"prettyprint linenums\">db.gamers.createIndex({ level: 1 })</pre>","<p>Create the given index:</p><p><br></p><pre class=\"prettyprint linenums\">db.gamers.createIndex({ is_active: 1 })</pre>","<p>There is no way to speed up this query.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806264,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Which collection method can you use to build the index?</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">db.collection.createIndex()</pre>","<pre class=\"prettyprint linenums\">db.collection.getIndexes()</pre>","<pre class=\"prettyprint linenums\">db.collection.insert()</pre>","<pre class=\"prettyprint linenums\">db.collection.create()</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806266,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Which collection method do you need to use to drop a specific collection?</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">db.collection.drop()</pre>","<pre class=\"prettyprint linenums\">db.collection.dropIndex()</pre>","<pre class=\"prettyprint linenums\">db.collection.dropCollection()</pre>","<pre class=\"prettyprint linenums\">db.collection.remove()</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806268,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select true statements about sorting &amp; indexing performance.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>Index prefixes cannot be used in query predicates to increase index utilization.</p>","<p>Index prefixes can be used in sort predicates to prevent sort in memory.</p>","<p>Indexes can be traversed both forward and backward.</p>","<p>It's possible to have a sorted query use an index for both sorting and filtering.</p>"]},"correct_response":["b","c","d"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806270,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you have a following index for <em>football_palyers </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{\"last_name\": 1, \"details.country\": 1, \"details.club\": 1, \"age\": 1}</pre><p><br></p><p>Determine which queries are able to successfully use a given index for both filtering and sorting.</p>","relatedLectureIds":"","feedbacks":["","",""],"explanation":"<pre class=\"prettyprint linenums\">db.football_players.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"last_name\":&nbsp;\"Lewandowski\",&nbsp;\"details.country\":&nbsp;{&nbsp;$gt:&nbsp;\"D\"}&nbsp;}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"details.country\":&nbsp;1&nbsp;}\n)</pre><p>Yes, because it uses the same field for equality and sorting.</p><p><br></p><pre class=\"prettyprint linenums\">db.football_players.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"last_name\":&nbsp;{&nbsp;$gte:&nbsp;\"L\"&nbsp;}&nbsp;}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"details.club\":&nbsp;-1&nbsp;}\n)</pre><p>No, this query doesn't use equality on the index prefix.</p>","answers":["<pre class=\"prettyprint linenums\">db.football_players.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"last_name\":&nbsp;\"Lewandowski\"&nbsp;}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"details.country\":&nbsp;1,&nbsp;\"details.club\":&nbsp;1&nbsp;}\n)</pre>","<pre class=\"prettyprint linenums\">db.football_players.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"last_name\":&nbsp;\"Lewandowski\",&nbsp;\"details.country\":&nbsp;{&nbsp;$gt:&nbsp;\"D\"}&nbsp;}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"details.country\":&nbsp;1&nbsp;}\n)</pre>","<pre class=\"prettyprint linenums\">db.football_players.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"last_name\":&nbsp;{&nbsp;$gte:&nbsp;\"L\"&nbsp;}&nbsp;}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\"details.club\":&nbsp;-1&nbsp;}\n)</pre>"]},"correct_response":["a","b"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806272,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select true statements about index performance.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>Indexes don't have to be completely stored in RAM, but permanent disk access to retrieve index information will have a performance impact.</p>","<p>For the fastest processing, we should make sure our indexes fit entirely in RAM.</p>","<p>Indexes cannot decrease insert throughput.</p>"]},"correct_response":["a","b"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806274,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>It's very important to picking a good shard key. If we don't choose a good shard key, then we won't be able to see the benefits of horizontal scaling.</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>True</p>","<p>False</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806276,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Complete the sentence below.</p><p><br></p><p>By default, all MongoDB user-created collections...</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>have an <code>_id</code> index.</p>","<p>have no index.</p>","<p>have an <code>field_id</code> index.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806278,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Given the following example document from an <em>artists </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{\n&nbsp;&nbsp;_id:&nbsp;5,\n&nbsp;&nbsp;last_name:&nbsp;'Maurer',\n&nbsp;&nbsp;first_name:&nbsp;'Alfred',\n&nbsp;&nbsp;year_born:&nbsp;1868,\n&nbsp;&nbsp;year_died:&nbsp;1932,\n&nbsp;&nbsp;nationality:&nbsp;'USA'\n}</pre><p><br></p><p>and the following index:</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.createIndex( {last_name: 1, nationality:1} )</pre><p><br></p><p>How MongoDB will handle the query below?</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.find( {last_name: /^O./} )</pre>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>As an index scan.</p>","<p>MongoDB will need to do a collection scan.</p>","<p>None of these.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806280,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Given the following example document from an <em>artists </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{\n&nbsp;&nbsp;_id:&nbsp;5,\n&nbsp;&nbsp;last_name:&nbsp;'Maurer',\n&nbsp;&nbsp;first_name:&nbsp;'Alfred',\n&nbsp;&nbsp;year_born:&nbsp;1868,\n&nbsp;&nbsp;year_died:&nbsp;1932,\n&nbsp;&nbsp;nationality:&nbsp;'USA'\n}</pre><p><br></p><p>and the following index:</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.createIndex( {last_name: 1, nationality:1} )</pre><p><br></p><p>How MongoDB will handle the query below?</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.find( {last_name: /^B./, nationality: 'France'} )</pre>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>As an index scan.</p>","<p>As a collection scan.</p>","<p>None of these.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806282,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Given the following example document from an <em>artists </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{\n&nbsp;&nbsp;_id:&nbsp;5,\n&nbsp;&nbsp;last_name:&nbsp;'Maurer',\n&nbsp;&nbsp;first_name:&nbsp;'Alfred',\n&nbsp;&nbsp;year_born:&nbsp;1868,\n&nbsp;&nbsp;year_died:&nbsp;1932,\n&nbsp;&nbsp;nationality:&nbsp;'USA'\n}</pre><p><br></p><p>and the following index:</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.createIndex( {last_name: 1, nationality:1} )</pre><p><br></p><p>How MongoDB will handle the query below?</p><p><br></p><pre class=\"prettyprint linenums\">db.artists.find( {year_born: 1863} )</pre>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<p>As an index scan.</p>","<p>As a collection scan.</p>","<p>None of these.</p>"]},"correct_response":["b"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806284,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements about covered queries.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>All fields used in a query filter must be in the index used by the query.</p>","<p>All fields returned in the result must be in the index used by the query.</p>","<p>For a covered query, you service the operation entirely from the index, which is usually faster than checking each document.</p>","<p>Covered queries don't use indexes.</p>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806286,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you have the following index on a <em>routes </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">db.routes.createIndex( {airplane: 1, src_airport: 1, dst_airport: 1, stops: 1} )</pre><p><br></p><p>Which of the following queries will be able to use this index for sorting. Check all that apply.</p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<pre class=\"prettyprint linenums\">db.routes.find( {airplane: 'CNC'}).sort({src_airport: 1, dst_airport: 1} )</pre>","<pre class=\"prettyprint linenums\">db.routes.find( {airplane: 'CNC', src_airport: {$gt: 'C'}}).sort({src_airport: 1} )</pre>","<pre class=\"prettyprint linenums\">db.routes.find( {airplane:&nbsp;'CNC'}).sort({dst_airport:&nbsp;1} )</pre>"]},"correct_response":["a","b"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806288,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Which command do you use to display all indexes in <em>routes </em>collection?</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">db.routes.getIndexes()</pre>","<pre class=\"prettyprint linenums\">db.routes.dropIndex()</pre>","<pre class=\"prettyprint linenums\">db.routes.dropIndex()</pre>","<pre class=\"prettyprint linenums\">db.routes.indexes()</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806290,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you added the following index to a <em>products </em>collection:</p><p><br></p><pre class=\"prettyprint linenums\">{product_category: 1}</pre><p><br></p><p>Which of the following operations can potentially decrease performance?</p>","relatedLectureIds":"","feedbacks":["","",""],"explanation":"<p>The <em>updateOne </em>and <em>insertOne </em>operations are correct because adding indexes affects write performance.</p>","answers":["<pre class=\"prettyprint linenums\">db.products.find({product_category: 'clothes'})</pre>","<pre class=\"prettyprint linenums\">db.products.insertOne({product_category: 'clothes'})</pre>","<pre class=\"prettyprint linenums\">db.products.updateOne({product_category:&nbsp;'shoes'}, {$set: company: 'Nike'})</pre>"]},"correct_response":["b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806292,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you have a <em>products </em>collection with an index:</p><p><br></p><pre class=\"prettyprint linenums\">{product_category:&nbsp;1}</pre><p><br></p><p>For which of the following queries can MongoDB look at only a subset of the index entries, rather than all of the index entries? </p>","relatedLectureIds":"","feedbacks":["","",""],"answers":["<pre class=\"prettyprint linenums\">db.products.find({product_category: /^A./})</pre>","<pre class=\"prettyprint linenums\">db.products.find({product_category: /A./})</pre>","<pre class=\"prettyprint linenums\">db.products.find({product_category: /S./})</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806294,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>You have the following index in a <em>products</em> collection:</p><p><br></p><pre class=\"prettyprint linenums\">{product_category:&nbsp;1,&nbsp;product_name:&nbsp;1,&nbsp;origin_country:&nbsp;-1}</pre><p><br></p><p>Which of the following queries can use this index? Check all that apply.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">db.products.find({\n&nbsp;&nbsp;&nbsp;&nbsp;product_category:&nbsp;'shoes',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;product_name:&nbsp;'AIR&nbsp;MAX&nbsp;90',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;origin_country:&nbsp;'Bangladesh'\n})</pre>","<pre class=\"prettyprint linenums\">db.products.find({\n&nbsp;&nbsp;&nbsp;&nbsp;product_name:&nbsp;'AIR&nbsp;MAX&nbsp;90',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;product_category:&nbsp;'shoes',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;origin_country:&nbsp;'Bangladesh'\n})</pre>","<pre class=\"prettyprint linenums\">db.products.find({\n&nbsp;&nbsp;&nbsp;&nbsp;origin_country:&nbsp;'Bangladesh',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;product_name:&nbsp;'AIR&nbsp;MAX&nbsp;90',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;product_category:&nbsp;'shoes'\n})</pre>","<pre class=\"prettyprint linenums\">db.products.find({\n&nbsp;&nbsp;&nbsp;&nbsp;product_name:&nbsp;'AIR&nbsp;MAX&nbsp;90',&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;origin_country:&nbsp;'Bangladesh'\n})</pre>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806296,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Can you create a unique index in MongoDB?</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>Yes</p>","<p>No</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806298,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements regarding to unique indexes in MongoDB.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>A unique index ensures that the indexed fields don't store duplicate values.</p>","<p>By default, MongoDB creates a unique index on the <code>_id</code> field.</p>","<p>When creating a unique index, we need to pass an additional <em>unique </em>option set to <em>true</em>. For example:</p><p><br></p><pre class=\"prettyprint linenums\">db.products.createIndex({manufacturer_id:&nbsp;1}, {unique: true})</pre>","<p>In MongoDB we cannot enforce a unique constraint on compound indexes.</p>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806300,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose we have a <em>products </em>collection with the following fields and values:</p><p><code>_id</code> (automatically created ObjectId)</p><p><code>product_code</code> (unique values for each product)</p><p><code>color</code> (as String values)</p><p><code>size</code>&nbsp;(this field is missing for some products)</p><p><code>origin_country</code></p><p><br></p><p>Which of these fields would be the best shard key?</p>","relatedLectureIds":"","feedbacks":["","","","",""],"explanation":"<p>With <code>color</code>, <code>size</code>, and <code>origin_country</code> we run the risk of low cardinality. </p><p>The <code>_id</code> wouldn't make a good shard key because it isn't something meaningful we could query the database.</p>","answers":["<p><code>product_code</code></p>","<p><code>_id</code></p>","<p><code>color</code></p>","<p><code>size</code></p>","<p><code>origin_country</code></p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806302,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Why is high cardinality important when choosing a shard key?</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>Because documents with the same shard key will be placed in the same chunk. This can result in a very big chunk.</p>","<p>It's not important. Low cardinality is just as good as high cardinality.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806304,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>In which situations can we consider sharding?</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>We want to improve read performance for our application.</p>","<p>Our dataset is too big to fit in one MongoDB instance.</p>","<p>It takes too long to backup and restore the data set.</p>","<p>A new developer will join your development team soon.</p>"]},"correct_response":["a","b","c"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806306,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you have a <em>restaurants </em>collection with the following document structure:</p><p><br></p><pre class=\"prettyprint linenums\">{\n  _id: ObjectId(\"5eb3d668b31de5d588f42931\"),\n  address: {\n    building: '6409',\n    coord: [ -74.00528899999999, 40.628886 ],\n    street: '11 Avenue',\n    zipcode: '11219'\n  },\n  borough: 'Brooklyn',\n  cuisine: 'American',\n  grades: [\n    {\n      date: ISODate(\"2014-07-18T00:00:00.000Z\"),\n      grade: 'A',\n      score: 12\n    },\n    {\n      date: ISODate(\"2013-07-30T00:00:00.000Z\"),\n      grade: 'A',\n      score: 12\n    },\n    {\n      date: ISODate(\"2013-02-13T00:00:00.000Z\"),\n      grade: 'A',\n      score: 11\n    },\n    { date: ISODate(\"2012-08-16T00:00:00.000Z\"), \n      grade: 'A', \n      score: 2 },\n    {\n      date: ISODate(\"2011-08-17T00:00:00.000Z\"),\n      grade: 'A',\n      score: 11\n    }\n  ],\n  name: 'Regina Caterers',\n  restaurant_id: '40356649'\n}</pre><p><br></p><p>You don't have any indexes indexes so far. What will the query plan look like for the following query?</p><p><br></p><pre class=\"prettyprint linenums\">db.restaurants.find( { cuisine: 'American' })</pre>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>COLLSCAN</p>","<p>IXSCAN</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806308,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Suppose you have a <em>restaurants </em>collection with the following document structure:</p><p><br></p><pre class=\"prettyprint linenums\">{\n  _id: ObjectId(\"5eb3d668b31de5d588f42931\"),\n  address: {\n    building: '6409',\n    coord: [ -74.00528899999999, 40.628886 ],\n    street: '11 Avenue',\n    zipcode: '11219'\n  },\n  borough: 'Brooklyn',\n  cuisine: 'American',\n  grades: [\n    {\n      date: ISODate(\"2014-07-18T00:00:00.000Z\"),\n      grade: 'A',\n      score: 12\n    },\n    {\n      date: ISODate(\"2013-07-30T00:00:00.000Z\"),\n      grade: 'A',\n      score: 12\n    },\n    {\n      date: ISODate(\"2013-02-13T00:00:00.000Z\"),\n      grade: 'A',\n      score: 11\n    },\n    { date: ISODate(\"2012-08-16T00:00:00.000Z\"), \n      grade: 'A', \n      score: 2 },\n    {\n      date: ISODate(\"2011-08-17T00:00:00.000Z\"),\n      grade: 'A',\n      score: 11\n    }\n  ],\n  name: 'Regina Caterers',\n  restaurant_id: '40356649'\n}</pre><p><br></p><p>You have the following index:</p><p><br></p><pre class=\"prettyprint linenums\">{cuisine: 1, borough: 1}</pre><p><br></p><p>What will the query plan look like for the following query?</p><p><br></p><pre class=\"prettyprint linenums\">db.restaurants.find({cuisine: 'American', borough: {$gt: 'S'}})</pre>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>IXSCAN -&gt; FETCH -&gt;&nbsp;SORT</p>","<p>COLLSCAN -&gt;&nbsp;SORT</p>","<p>FETCH -&gt;&nbsp;SORT</p>","<p>SORT -&gt; IXSCAN -&gt; FETCH</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806310,"assessment_type":"multi-select","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>Select all true statements about indexes on a field with values of varying data types.</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>Values are ordered by data type, then by value.</p>","<p>In MongoDB index cannot have different data types.</p>","<p>Values are ordered only by value.</p>","<p>Values are ordered only by data type.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806312,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:01Z","prompt":{"question":"<p>What data structure is used to store the newly created index in MongoDB?</p>","relatedLectureIds":"","feedbacks":["","","","",""],"answers":["<p>B-tree</p>","<p>Graph</p>","<p>Heap</p>","<p>Dictionary</p>","<p>Binary Tree</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:01Z","section":""},{"_class":"assessment","id":40806314,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:02Z","prompt":{"question":"<p>Suppose you have a <em>reviews </em>collection in your database and you want to optimize the following query:</p><p><br></p><pre class=\"prettyprint linenums\">db.reviews.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{votes:&nbsp;{$gt:&nbsp;100},&nbsp;rating:&nbsp;4.5}\n).sort(\n&nbsp;&nbsp;&nbsp;&nbsp;{date:&nbsp;1}\n)</pre><p><br></p><p>Which index on this collection will be the most performant for the above query? Keep in mind the equality, sort, range rule.</p>","relatedLectureIds":"","feedbacks":["","","","","",""],"explanation":"<p>The most efficient index for the given query should follow the equality, sort, range rule which is in this case: </p><p><br></p><pre class=\"prettyprint linenums\">{rating: 1, date: 1, votes: 1}</pre>","answers":["<pre class=\"prettyprint linenums\">{rating: 1, date: 1, votes: 1}</pre>","<pre class=\"prettyprint linenums\">{rating: 1, votes: 1, date: 1}</pre>","<pre class=\"prettyprint linenums\">{votes: 1, date: 1, rating: 1}</pre>","<pre class=\"prettyprint linenums\">{date: 1, votes: 1, rating: 1}</pre>","<pre class=\"prettyprint linenums\">{date: 1, rating: 1, votes: 1}</pre>","<pre class=\"prettyprint linenums\">{votes: 1, rating: 1, date: 1}</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:02Z","section":""},{"_class":"assessment","id":40806316,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:02Z","prompt":{"question":"<p>Why adding indexes may lead to slower write operations?</p>","relatedLectureIds":"","feedbacks":["",""],"answers":["<p>Because we also need to update the index.</p>","<p>Because we have less and less disk space.</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:02Z","section":""},{"_class":"assessment","id":40806318,"assessment_type":"multi-select","created":"2021-12-13T15:17:02Z","prompt":{"question":"<p>Suppose you have a <em>reviews </em>collection with the following index:</p><p><br></p><pre class=\"prettyprint linenums\">{stars: 1, votes: 1}</pre><p><br></p><p>Which of the following queries would be a covered query?</p>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<pre class=\"prettyprint linenums\">db.reviews.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{stars:&nbsp;{$gt:&nbsp;4.5}},\n&nbsp;&nbsp;&nbsp;&nbsp;{_id:&nbsp;0,&nbsp;votes:&nbsp;1}\n)</pre>","<pre class=\"prettyprint linenums\">db.reviews.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{votes:&nbsp;{$gte:&nbsp;100}},\n&nbsp;&nbsp;&nbsp;&nbsp;{_id:&nbsp;0,&nbsp;votes:&nbsp;1}\n)</pre>","<pre class=\"prettyprint linenums\">db.reviews.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{votes:&nbsp;{$gte:&nbsp;100}},\n&nbsp;&nbsp;&nbsp;&nbsp;{_id:&nbsp;0,&nbsp;votes:&nbsp;1,&nbsp;stars:&nbsp;1}\n)</pre>","<pre class=\"prettyprint linenums\">db.reviews.find(\n&nbsp;&nbsp;&nbsp;&nbsp;{votes:&nbsp;{$gte:&nbsp;100},&nbsp;stars:&nbsp;4.5},\n&nbsp;&nbsp;&nbsp;&nbsp;{_id:&nbsp;0}\n)</pre>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:02Z","section":""},{"_class":"assessment","id":40806320,"assessment_type":"multiple-choice","created":"2021-12-13T15:17:02Z","prompt":{"question":"<p>How many indexes will the following command create?</p><p><br></p><pre class=\"prettyprint linenums\">db.products.createIndex(&nbsp;{product_name:&nbsp;1,&nbsp;product_category:&nbsp;-1}&nbsp;)</pre>","relatedLectureIds":"","feedbacks":["","","",""],"answers":["<p>1</p>","<p>0</p>","<p>2</p>","<p>3</p>"]},"correct_response":["a"],"updated":"2021-12-13T15:17:02Z","section":""}]}